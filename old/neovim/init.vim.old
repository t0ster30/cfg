"	     _   _ _____ _____     _____ __  __ 
"	    | \ | | ____/ _ \ \   / /_ _|  \/  |
"	   |  \| |  _|| | | \ \ / / | || |\/| |
"	  | |\  | |__| |_| |\ V /  | || |  | |
"	 |_| \_|_____\___/  \_/  |___|_|  |_|
"
"
"	     ________                    ___   __  
"	   (_) | /  \                  /   \ /  \ 
"	      ||    | , _|_  _   ,_     __/|    |
"	   _ ||    |/ \_|  |/  /  |      \|    |
"	 (_/  \__/  \/ |_/|__/   |_/\___/ \__/
"
"
filetype plugin indent on "–í–∫–ª—é—á–∞–µ—Ç –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —Ç–∏–ø–∞ —Ñ–∞–π–ª–∞, –∑–∞–≥—Ä—É–∑–∫—É —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏—Ö –µ–º—É –ø–ª–∞–≥–∏–Ω–æ–≤ –∏ —Ñ–∞–π–ª–æ–≤ –æ—Ç—Å—Ç—É–ø–æ–≤
set encoding=utf-8 "–°—Ç–∞–≤–∏—Ç –∫–æ–¥–∏—Ä–æ–≤–∫—É UTF-8
set nocompatible "–û—Ç–∫–ª—é—á–∞–µ—Ç –æ–±—Ä–∞—Ç–Ω—É—é —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç—å —Å Vi
syntax enable "–í–∫–ª—é—á–∞–µ—Ç –ø–æ–¥—Å–≤–µ—Ç–∫—É —Å–∏–Ω—Ç–∞–∫—Å–∏—Å–∞
set iminsert=0
set imsearch=0
inoremap <C-l> <C-^> " –ß—Ç–æ–±—ã –≤–º–µ—Å—Ç–æ Ctrl-^ –Ω–∞–∂–∏–º–∞—Ç—å Ctrl-L
set relativenumber
set number
set ruler
set confirm
set termguicolors
set ai
set listchars=tab:‚≠ø‚≠ø
"set listchars=tab:¬∑¬∑
set list
nnoremap <SPACE> <Nop>
let mapleader=" "
call plug#begin('~/.local/share/nvim/site/bundle')
"Plug 'ErichDonGubler/vim-sublime-monokai' "–î–æ–±–∞–≤—å—Ç–µ —ç—Ç–æ –≤ —Å–ø–∏—Å–æ–∫ –ø–ª–∞–≥–∏–Ω–æ–≤
"Plug 'sainnhe/gruvbox-material'
Plug 'yuttie/comfortable-motion.vim'
"Plug 'morhetz/gruvbox'
"Plug 'habamax/vim-gruvbit'
"Plug 'vim-airline/vim-airline'
"Plug 'vim-airline/vim-airline-themes'
Plug 'preservim/nerdtree'
Plug 'ryanoasis/vim-devicons'
Plug '/usr/local/opt/fzf'
Plug 'junegunn/fzf.vim'
Plug 'pacha/vem-dark'
Plug 'pacha/vem-statusline'
Plug 'mcchrish/nnn.vim'
"Plug 'knubie/vim-kitty-navigator'
call plug#end() "–ü–µ—Ä–µ—Å—Ç–∞—Ç—å —ç—Ç–æ –¥–µ–ª–∞—Ç—å
"colorscheme sublimemonokai "–î–æ–±–∞–≤—å—Ç–µ —ç—Ç–æ –ù–ï –≤ —Å–ø–∏—Å–æ–∫ –ø–ª–∞–≥–∏–Ω–æ–≤
"source $HOME/.config/nvim/themes/monokai.vim
set termguicolors
"colorscheme gruvbit
colorscheme vem-dark
"let g:gruvbit_transp_bg = v:true
"let g:airline_powerline_fonts = 1 "–í–∫–ª—é—á–∏—Ç—å –ø–æ–¥–¥–µ—Ä–∂–∫—É Powerline —à—Ä–∏—Ñ—Ç–æ–≤
"let g:airline#extensions#keymap#enabled = 0 "–ù–µ –ø–æ–∫–∞–∑—ã–≤–∞—Ç—å —Ç–µ–∫—É—â–∏–π –º–∞–ø–ø–∏–Ω–≥
"let g:airline_section_z = "\ue0a1:%l/%L Col:%c" "–ö–∞—Å—Ç–æ–º–Ω–∞—è –≥—Ä–∞—Ñ–∞ –ø–æ–ª–æ–∂–µ–Ω–∏—è –∫—É—Ä—Å–æ—Ä–∞
"let g:Powerline_symbols='unicode' "–ü–æ–¥–¥–µ—Ä–∂–∫–∞ unicode
"let g:airline#extensions#xkblayout#enabled = 0 "–ü—Ä–æ —ç—Ç–æ –ø–æ–∑–∂–µ —Ä–∞—Å—Å–∫–∞–∂—É
"let g:airline_theme = 'gruvbox_material'
"hi! Normal ctermbg=NONE guibg=NONE
"highlight EndOfBuffer ctermfg=black ctermbg=black
set fillchars=fold:\ ,vert:\‚îÇ,eob:\ ,msgsep:‚Äæ
"set guicursor=n-v-c:blinkon0
"set guicursor=a:blinkoff0
"let g:gruvbox_transparent_bg = '1'
"let g:gruvbox_termcolors = '256'
" Wayland Clipboard Support
xnoremap "+y y:call system("wl-copy", @")<cr>  
nnoremap "+p :let @"=substitute(system("wl-paste --no-newline"), '<C-v><C-m>', '', 'g')<cr>p  
nnoremap "*p :let @"=substitute(system("wl-paste --no-newline --primary"), '<C-v><C-m>', '', 'g')<cr>p
let &t_ZH="\033[3m"
let &t_ZR="\033[23m"
"set t_ZH=3m
"set t_ZR=23m
hi! Comment cterm=italic
hi! Comment gui=italic
let g:airline_left_sep = 'ÓÇ¥'
let g:airline_left_alt_sep = 'ÓÇµ'
let g:airline_right_sep = 'ÓÇ∂'
let g:airline_left_alt_sep = 'ÓÇ∑'
nnoremap <silent> gc hxp
let g:neovide_transparency=0.95
let g:neovide_cursor_vfx_mode = "torpedo"
let g:neovide_cursor_trail_length=0.8
let g:neovide_cursor_antialiasing=v:true
let g:neovide_cursor_animate_in_insert_mode=v:true
set guifont=FiraCodeNerdFont-Complete
set langmap=–•–ë–£–ö–ï–ù–ì–®–ñ–ó–§–´–í–ê–ü–†–û–õ–î–Ø–ß–°–ú–ò–¢–¨;QWERTYUIOPASDFGHJKLZXCVBNM,—Ö–±—É–∫–µ–Ω–≥—à–∂–∑—Ñ—ã–≤–∞–ø—Ä–æ–ª–¥—è—á—Å–º–∏—Ç—å;qwertyuiopasdfghjklzxcvbnm
inoremap  <Up>     <NOP>
inoremap  <Down>   <NOP>
inoremap  <Left>   <NOP>
inoremap  <Right>  <NOP>
noremap   <Up>     <NOP>
noremap   <Down>   <NOP>
noremap   <Left>   <NOP>
noremap   <Right>  <NOP>
hi! Normal ctermbg=NONE 
language en_US
"let s:pairs={
"            \'<': '>',
"            \'{': '}',
"            \'[': ']',
"            \'(': ')',
"            \'¬´': '¬ª',
"            \'‚Äû': '‚Äú',
"            \'‚Äú': '‚Äù',
"            \'‚Äò': '‚Äô',
"        \}
inoremap { {}<Esc>ha
inoremap ( ()<Esc>ha
inoremap [ []<Esc>ha
inoremap " ""<Esc>ha
inoremap ' ''<Esc>ha
inoremap ` ``<Esc>ha
